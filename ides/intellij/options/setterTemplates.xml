<application>
  <component name="SetterTemplates">
    <option name="defaultTempalteName" value="IntelliJ Default" />
    <option name="templates">
      <list>
        <TemplateResource>
          <option name="fileName" value="SFG" />
          <option name="template" value="#set($paramName = $helper.getParamName($field, $project))&#10;#set($propName = $helper.getPropertyName($field, $project))&#10;#set($type = $field.typeName)&#10;#if($field.modifierStatic)&#10;static ##&#10;#end&#10;#if($propName.endsWith(&quot;Code&quot;) &amp;&amp; !$field.name.equals(&quot;planCode&quot;)&#10;&amp;&amp; ($type.equals(&quot;Integer&quot;) || $type.equals(&quot;String&quot;)))&#10;    #set($paramName = $paramName.substring(0, $paramName.indexOf(&quot;Code&quot;)))&#10;    #set($propName = $StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($propName.substring(0, $propName.indexOf(&quot;Code&quot;)))))&#10;    #set($type = $StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($propName)))&#10;void set${propName}($type $paramName) {&#10;    #if ($field.name == $paramName)&#10;        #if (!$field.modifierStatic)&#10;        this.##&#10;        #else&#10;            $classname.##&#10;        #end&#10;    #end&#10;    $field.name = $paramName == null&#10;? ${propName}.NULL.getCode()&#10;: ${paramName}.getCode();&#10;}&#10;#else&#10;void set$StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($propName))($field.type $paramName) {&#10;    #if ($field.name == $paramName)&#10;        #if (!$field.modifierStatic)&#10;        this.##&#10;        #else&#10;            $classname.##&#10;        #end&#10;    #end&#10;    $field.name = $paramName;&#10;}&#10;#end" />
        </TemplateResource>
      </list>
    </option>
  </component>
</application>