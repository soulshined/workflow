{
    // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "console.table": {
        "prefix": "table",
        "body": [
            "console.table($1);"
        ],
        "description": "Log output to console as tabular data"
    },
    "console.count": {
        "prefix": "count",
        "body": [
            "console.count($1);"
        ],
        "description": "Count"
    },
    "console here": {
        "prefix": "here",
        "body": "console.log(\"here$1\");",
    },
    "it": {
        "prefix": "it",
        "body": [
            "it('$1', function() {",
            "\t$0",
            "})"
        ]
    },
    "it-equal": {
        "prefix": "it-equal",
        "body": [
            "it('$1', function() {",
            "\texpect($2).equal($0)",
            "})"
        ]
    },
    "it-should-fail": {
        "prefix": "it-should-fail",
        "body": [
            "it('should fail [$1]', function() {",
            "\tshould().Throw(function () {",
            "\t\t$0",
            "\t}, ${2:Error})",
            "})"
        ]
    },
    "promise": {
        "prefix": "promise",
        "body": [
            "return new Promise((resolve, reject) => {",
            "\t$0",
            "});"
        ]
    }
}